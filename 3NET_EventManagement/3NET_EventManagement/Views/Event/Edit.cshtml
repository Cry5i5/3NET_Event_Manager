@model _3NET_EventManagement.Models.Event

@{
    ViewBag.Title = "Edit";
    ViewBag.eventModel = Model;
}

<h2>Edit</h2>

@using (Html.BeginForm("Edit", "Event", FormMethod.Post, Model)) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Event</legend>

        @Html.HiddenFor(model => model.Id)

        <div class="editor-label">
            @Html.LabelFor(model => model.EventName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.EventName)
            @Html.ValidationMessageFor(model => model.EventName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Address)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Address)
            @Html.ValidationMessageFor(model => model.Address)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Date)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Date)
            @Html.ValidationMessageFor(model => model.Date)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Summary)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Summary)
            @Html.ValidationMessageFor(model => model.Summary)
        </div>

        <div class="editor-label">
                @Html.LabelFor(model => model.CreatorId)
            </div>
        <div class="editor-label">  
            @Html.HiddenFor(model => model.CreatorId)
        </div>
            <div class="editor-field">
                @Html.DisplayFor(model => model.Creator.UserName)
          
            </div>
        @if (Roles.GetRolesForUser(User.Identity.Name).Contains("admin")){
            <div class="editor-label">
                @Html.LabelFor(model => model.StatusId, "Status")
            </div>
            <div class="editor-field">
                @Html.DropDownList("StatusId", String.Empty)
                @Html.ValidationMessageFor(model => model.StatusId)
            </div>
}
else
{
            <div class="editor-label">
                @Html.LabelFor(model => model.StatusId, "Status")
            </div>
            <div class="editor-field" >
                @Html.HiddenFor(model => model.StatusId)
            </div>
            <div class="editor-field">
                @Html.DisplayFor(model => model.Status.StatusName)
            </div>
          
}
        <div class="editor-label">
            @Html.LabelFor(model => model.TypeId, "Type")
        </div>
        <div class="editor-field">
            @Html.DropDownList("TypeId", String.Empty)
            @Html.ValidationMessageFor(model => model.TypeId)
        </div>
        <h3>
            Invited Friends
        </h3>
        <table class="table table-bordered">
            @foreach (var item in Model.Invitations.Where(e => e.EventId == Model.Id).ToList())
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.User.UserName)
                    </td>

                </tr>
            }
        </table>
                <p>
                    <input type="submit" value="Save" class="btn btn-success" />
                </p>
        </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
